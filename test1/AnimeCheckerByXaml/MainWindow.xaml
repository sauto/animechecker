<Window x:Class="AnimeCheckerByXaml.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Name="_MainWindow"
        Title="アニメ視聴チェッカー" Height="350" Width="525">
    <Window.Resources>
        <Style x:Key="ToolBarPanelStyle1" TargetType="{x:Type ToolBarPanel}"/>
        <Style x:Key="CellYellowStyle" TargetType="{x:Type DataGridCell}" >
            <!--チェックボックスプロパティの値によって色塗りONOFFを変更-->
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Check}" Value="True" >
                    <Setter Property="Background" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Name="MainPanel"  Margin="0,0,2,0" Loaded="Grid_Loaded">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="5"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--SourceはResourceフォルダの画像ファイルのビルドアクションをResourceにする必要がある-->
        <Image HorizontalAlignment="Left"  Margin="10,10,0,-55" Grid.RowSpan="2" VerticalAlignment="Top"
               Name="pictureBox" Source="./Resources/白紙.png" Grid.ColumnSpan="2" Stretch="Fill" 
               AllowDrop="True" Drop="pictureBox_Drop" PreviewDragOver="pictureBox_PreviewDragOver"/>

        <!--
        AutoGenerateColumnsがtrueだとバインディングデータのクラスの順番を列順に一致させないとおかしくなる
        バインドしたクラスの全プロパティが反映される
        列ヘッダが自動的にプロパティ名になる
        ItemsSource="{Binding}"とした場合、DataContextに入れたObservableCollectionオブジェクトにバインドする
        -->
        <DataGrid x:Name="upperdatagrid" 
                  ItemsSource="{Binding}" 
                  AutoGenerateColumns="False" 
                  Grid.ColumnSpan="2" Margin="42,30,60,54" CellEditEnding="datagrid_CellEditEnding" 
                  Grid.RowSpan="2" SelectionUnit="CellOrRowHeader"  
                  Sorting="upperdatagrid_Sorting" PreviewKeyDown="upperdatagrid_PreviewKeyDown" 
                  CanUserAddRows="False" CanUserDeleteRows="False" 
                  >
            <DataGrid.Columns>
                <!--チェックボックスの場合はbool型プロパティにバインドしないといけない
                 UpdateSourceTriggerをPropertyChangedにしないとチェック時すぐにsetプロパティが起動しない
                CheckBoxColumnだとワンクリックでチェックがつかないのでTemplateColumnを使って中身のCheckBoxを直接置く-->

                <DataGridTemplateColumn x:Name="Check"  Header="" ClipboardContentBinding="{Binding Path=Check ,Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"
                                        >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Check ,Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="Title" Binding="{Binding Path=Title ,Mode=TwoWay}" Header="タイトル" PastingCellClipboardContent="Title_PastingCellClipboardContent"/>
                <DataGridTextColumn x:Name="Time" Binding="{Binding Path=Time ,Mode=TwoWay}" Header="視聴時間(分)" PastingCellClipboardContent="Time_PastingCellClipboardContent"/>
                <DataGridTextColumn x:Name="Day" Binding="{Binding Path=Day ,Mode=TwoWay}" Header="放送曜日" PastingCellClipboardContent="Day_PastingCellClipboardContent" />
                <DataGridTextColumn x:Name="ID" Binding="{Binding Path=ID ,Mode=TwoWay}" Header="ID" Visibility="Hidden"/>
                <DataGridTextColumn x:Name="Limit" Binding="{Binding Path=Limit ,Mode=TwoWay}"
                                    Header="視聴期限" IsReadOnly = "True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <!--チェックボックスプロパティの値によって色塗りONOFFを変更-->
                            <Style.Triggers >
                                <DataTrigger Binding="{Binding Path=Check}" Value="True" >
                                    <Setter Property="Background" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="AddBottun" Content="Button" HorizontalAlignment="Left" Margin="42,126,0,0" Grid.Row="1" VerticalAlignment="Top" Width="75"/>
        <Expander Header="Expander" HorizontalAlignment="Left" VerticalAlignment="Top">
            <StackPanel Background="#FFFDFFDC">
                <Button DockPanel.Dock="Top" Margin="5,2,5,2" Width="90">Command A</Button>
                <Button x:Name="Botton1"  DockPanel.Dock="Top" Margin="5,2,5,2" Width="90" Height="38" >
                    <ContentPresenter
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom">

                    </ContentPresenter>
                </Button>
                <Button DockPanel.Dock="Top" Margin="5,2,5,2" Width="90" >Command C
                    <!--<Button.Style >
                        <Style TargetType="{StaticResource CellYellowStyle}"/>
                    </Button.Style>-->
                </Button>

            </StackPanel>
        </Expander>
        <StackPanel Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="23" Margin="170,127,0,0" Grid.Row="1" VerticalAlignment="Top" Width="214">
            <TextBlock TextWrapping="Wrap" Text="TextBlock" Margin="123,0,10,0"/>
            <Label Content="残り時間" Margin="0,0,122,0" Height="29"/>
        </StackPanel>

    </Grid>
</Window>
